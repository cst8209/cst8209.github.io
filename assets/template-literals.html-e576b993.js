import{_ as t,M as n,p as l,q as r,R as a,t as e,N as i,a1 as o}from"./framework-96b046e1.js";const c={},p=a("h2",{id:"template-literals",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#template-literals","aria-hidden":"true"},"#"),e(" Template Literals")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",target:"_blank",rel:"noopener noreferrer"},u=a("code",null,"`",-1),m=o('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> greeting <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, World</span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Template literals also has multi-line support, which means it possible to include a return inside of a string without the use of the special character or string concatenation.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> address <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n221B Baker Street\nLondon, England</span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3);function h(g,v){const s=n("ExternalLinkIcon");return l(),r("div",null,[p,a("p",null,[e("The "),a("a",d,[e("template literal"),i(s)]),e(" is a syntax for string literal that allows for embedded expressions and multi-line support. To create a template literal the backtick ("),u,e(") is used to surrounded the string literal and any expressions.")]),m])}const k=t(c,[["render",h],["__file","template-literals.html.vue"]]);export{k as default};
