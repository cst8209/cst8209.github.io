import{_ as i,M as s,p as l,q as r,N as t,R as n,t as e,a1 as o}from"./framework-96b046e1.js";const p={},d=n("h1",{id:"merging",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#merging","aria-hidden":"true"},"#"),e(" Merging")],-1),g={href:"https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging",target:"_blank",rel:"noopener noreferrer"},u=n("code",null,"git merge",-1),h=n("code",null,"git merge",-1),m=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout main
<span class="token function">git</span> merge new-branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="merge-conflicts" tabindex="-1"><a class="header-anchor" href="#merge-conflicts" aria-hidden="true">#</a> Merge Conflicts</h2>`,2),f={href:"https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#_basic_merge_conflicts",target:"_blank",rel:"noopener noreferrer"},b=o(`<p>Instead of merging the conflicting changes, Git will add standard conflict-resolution markers to the files that have conflicts.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:index.html
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>contact : email.support@github.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
=======
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>please contact us at support@github.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; new-branch:index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The top section indicates the current change. The bottom section is the incoming change. The merge must be completed manually and markers removed to resolve this conflict. Once all of the conflicts have been resolved, the <code>git add</code> command is run on each conflicting file. Finally, running the <code>git commit</code> command will fully merge the branches.</p>`,3);function v(k,_){const c=s("Youtube"),a=s("ExternalLinkIcon");return l(),r("div",null,[d,t(c,{id:"yyLiplDQtf0",citation:"github"}),n("p",null,[n("a",g,[e("Merging"),t(a)]),e(" is the convergence of two parallel lines of development or the combining of commits of two different branches. The process of merging is accomplished using the "),u,e(" command. Start by switching to the branch to merge into, then call the "),h,e(" command followed by the name of the branch to be merged.")]),m,n("p",null,[n("a",f,[e("Merge conflicts"),t(a)]),e(" occur when Git is unable to complete a merge, and often is the result of different changes being made to the same part of the same file. When this occurs, Git will indicate that a merge conflict has occurred.")]),b])}const w=i(p,[["render",v],["__file","merging.html.vue"]]);export{w as default};
