import{_ as i,M as o,p as r,q as l,N as s,R as a,t as n,a1 as t}from"./framework-96b046e1.js";const p={},d=a("h1",{id:"local-storage",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#local-storage","aria-hidden":"true"},"#"),n(" Local Storage")],-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"localStorage",-1),h={class:"custom-container warning"},m=a("p",{class:"custom-container-title"},"NOTE",-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",target:"_blank",rel:"noopener noreferrer"},v=a("code",null,"sessionStorage",-1),f=t(`<h2 id="storing-to-localstorage" tabindex="-1"><a class="header-anchor" href="#storing-to-localstorage" aria-hidden="true">#</a> Storing to localStorage</h2><p>The <code>setItem()</code> function is used to store new data items to localStorage. The function takes two arguments, the first being the item&#39;s key and the second being the item&#39;s value. Both the key and value must be a string.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Michael&#39;</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Professor&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="retrieving-localstorage-items" tabindex="-1"><a class="header-anchor" href="#retrieving-localstorage-items" aria-hidden="true">#</a> Retrieving localStorage Items</h2><p>The <code>getItem()</code> function is used to retrieve data items stored in localStorage. The function takes a single argument, the key of the desired item.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Michael</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Professor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="deleting-localstorage" tabindex="-1"><a class="header-anchor" href="#deleting-localstorage" aria-hidden="true">#</a> Deleting localStorage</h2><p>The <code>removeItem()</code> function is used to remove an item from localStorage. It takes a single argument, the key of the desired item.</p><p>The <code>clear()</code> function is used to clear all items stored in localStorage for the current domain.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="storing-objects-to-localstorage" tabindex="-1"><a class="header-anchor" href="#storing-objects-to-localstorage" aria-hidden="true">#</a> Storing Objects to localStorage</h2><p>The values of data items stored to localStorage must be strings. This can be quite limiting for web applications that must store and keep track of many different data items.</p>`,12),b={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},_=a("code",null,"JSON.stringify()",-1),S=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Michael&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Professor&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;name&quot;:&quot;Michael&quot;,&quot;title&quot;:&quot;Professor&quot;}&quot;</span>

localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),j={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"},y=a("code",null,"JSON.parse()",-1),x=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

data<span class="token punctuation">.</span>name <span class="token comment">// Michael</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function w(I,T){const c=o("Youtube"),e=o("ExternalLinkIcon");return r(),l("div",null,[d,s(c,{id:"hOCYNdgsUfs",citation:"griffith"}),a("p",null,[n("The "),a("a",u,[g,s(e)]),n(" property in JavaScript allows access to the browser's localStorage, which is a way of saving data across browser sessions. The data to localStorage is domain-specific.")]),a("div",h,[m,a("p",null,[n("The "),a("a",k,[v,s(e)]),n(" property and the browser's sessionStorage are similar to localStorage except that stored data will be cleared when the page session ends.")])]),f,a("p",null,[n("A workaround for this is to store an entire object or array to a data item as a string using the "),a("a",b,[_,s(e)]),n(" function. This function takes an object or an array and returns as a string. This string can then be stored to localStorage.")]),S,a("p",null,[n("When it comes to retrieving the data item, the "),a("a",j,[y,s(e)]),n(" function can be used. This function takes a previously stringified object or array and returns a fully functional object or array.")]),x])}const q=i(p,[["render",w],["__file","index.html.vue"]]);export{q as default};
