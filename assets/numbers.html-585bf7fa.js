import{_ as p,M as t,p as c,q as i,N as s,R as n,t as a,a1 as l}from"./framework-96b046e1.js";const u={},r=n("h1",{id:"javascript-numbers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-numbers","aria-hidden":"true"},"#"),a(" JavaScript Numbers")],-1),d=l(`<p>JavaScript has only one type of number. Numbers can be written as whole numbers, as known as integers, or decimal numbers, as known as floating-point numbers.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>When assigning a number to a variable, no quotes or backticks should be used.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> wholeNumber <span class="token operator">=</span> <span class="token number">7</span>
<span class="token keyword">const</span> decimal <span class="token operator">=</span> <span class="token number">7.77</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="methods-and-functions" tabindex="-1"><a class="header-anchor" href="#methods-and-functions" aria-hidden="true">#</a> Methods and Functions</h2><p>JavaScript includes useful methods and functions for working with numbers. These methods will work with any type of numbers with (literals, variables, or expressions).</p><h3 id="the-tofixed-method" tabindex="-1"><a class="header-anchor" href="#the-tofixed-method" aria-hidden="true">#</a> The toFixed() Method</h3><p>The <code>toFixed()</code> method returns a string, with the number written with a specified number of decimals.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If the original number contains more decimals than specified, then the additional numbers will be rounded. If the original number contains fewer decimals than specified, then zeros will be added to the end.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pi <span class="token operator">=</span> <span class="token number">3.1415</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.142</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.14150</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="the-toprecision-method" tabindex="-1"><a class="header-anchor" href="#the-toprecision-method" aria-hidden="true">#</a> The toPrecision() Method</h3><p>The <code>toPrecision()</code> method returns a string with a number written with a specified length.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>If the original number contains more digits than specified, then the additional numbers will be rounded. If the original number contains fewer digits than specified, then zeros will be added to the end.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">3.1415</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.14</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.1415</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.141500</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="the-parseint-function" tabindex="-1"><a class="header-anchor" href="#the-parseint-function" aria-hidden="true">#</a> The parseInt() Function</h3><p>The <code>parseInt()</code> function returns an integer (whole number) from the value provided. The value provide can be a number, string, or array.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The <code>parseInt()</code> function will return <code>null</code> if the first value encountered cannot be converted to a number.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;3.1415&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.1415</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;pi = 3.1415&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="the-parsefloat-function" tabindex="-1"><a class="header-anchor" href="#the-parsefloat-function" aria-hidden="true">#</a> The parseFloat() Function</h3><p>The <code>parseFloat()</code> function returns an floating point number (decimal) from the value provided. The value provide can be a number, string, or array.</p><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>The <code>parseFloat()</code> function will return <code>null</code> if the first value encountered cannot be converted to a number.</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// 3.1415</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;3.1415&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// 3.1415</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.1415</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// 3.1415</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;pi = 3.1415&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>`,22),k={href:"https://www.w3schools.com/js/js_numbers.asp",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.w3schools.com/js/js_number_methods.asp",target:"_blank",rel:"noopener noreferrer"};function h(v,b){const o=t("Scrimba"),e=t("ExternalLinkIcon");return c(),i("div",null,[r,s(o,{id:"/p/pPPeCy/czMvntw",citation:"israel"}),d,n("ul",null,[n("li",null,[n("a",k,[a("JavaScript Numbers"),s(e)])]),n("li",null,[n("a",m,[a("JavaScript Numbers Methods"),s(e)])])])])}const g=p(u,[["render",h],["__file","numbers.html.vue"]]);export{g as default};
