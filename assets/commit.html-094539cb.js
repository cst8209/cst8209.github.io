import{_ as a,p as s,q as n,Q as t,R as e,t as i,a1 as o}from"./framework-96b046e1.js";const d={},c=e("h1",{id:"commit-a-change",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#commit-a-change","aria-hidden":"true"},"#"),i(" Commit a Change")],-1),l=o(`<p>Once a change has been made to a project, it is possible to commit the change to Git. Committing is how we tell Git to make a changeset or snapshot of our project.</p><p>Committing changes is a two-step process. First new changes must be added to the staging area. The staging area is how Git distinguishes between the changes we want to commit versus those we do not. Only changes in the staging area can be committed.</p><h2 id="adding-to-the-staging-area" tabindex="-1"><a class="header-anchor" href="#adding-to-the-staging-area" aria-hidden="true">#</a> Adding to the staging area</h2><p>To add a specific file to the staging area, we would use the <code>git add</code> command from within the project folder followed by the file&#39;s path.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Add index.html to the staging area</span>
<span class="token function">git</span> <span class="token function">add</span> index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to add multiple files to the staging area by using different options.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Add all files that end in .html</span>
<span class="token function">git</span> <span class="token function">add</span> *.html

<span class="token comment"># Add all files in the CSS directory</span>
<span class="token function">git</span> <span class="token function">add</span> CSS/*

<span class="token comment"># Add all files everywhere</span>
<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="committing-the-changes" tabindex="-1"><a class="header-anchor" href="#committing-the-changes" aria-hidden="true">#</a> Committing the Changes</h2><p>Once a file has been added to the staging area, it can be committed using the <code>git commit</code> command. Each time a commit is made, it is important to add a short message that describes what the commit or changes are doing. We add a message by using the <code>-m</code> option followed by the message in quotes.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;Adds an index.html to my project.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="commit-messages" tabindex="-1"><a class="header-anchor" href="#commit-messages" aria-hidden="true">#</a> Commit Messages</h2><p>While there are few requirements for commit messages, there are best practices for what kind of messages should be added to commits.</p><ol><li>Messages should be short single-line summaries (less than 50 characters). A complete description can be added to the summary after a blank line.</li><li>Messages should be written in the present tense, not past tense.</li><li>Messages should be clear and descriptive</li></ol>`,13);function r(m,h){return s(),n("div",null,[c,t(` ::: watch
[Watch "Your first commit" on LinkedIn Learning](https://www.linkedin.com/learning/git-essential-training-the-basics/your-first-commit)
::: `),l])}const p=a(d,[["render",r],["__file","commit.html.vue"]]);export{p as default};
