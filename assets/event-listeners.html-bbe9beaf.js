import{_ as c,M as t,p as i,q as p,N as e,R as n,t as s,a1 as l}from"./framework-96b046e1.js";const u={},r=n("h1",{id:"javascript-event-listeners",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-event-listeners","aria-hidden":"true"},"#"),s(" JavaScript Event Listeners")],-1),d={href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"addEventListener()",-1),k=l(`<div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>While there are other techniques for interacting with DOM Events, the <code>addEventListener()</code> method is considered best practice. In this course, we will not be using inline events (onclick, etc.)</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// using an anonymous function</span>
button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The button was clicked</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>addEventListener()</code> method takes two arguments, the event type and a function that will execute when the event occurs. In the example above, the event type is <code>&#39;click&#39;</code> and the function is an anonymous function that logs a message to the console. However, a predefined function may be used instead of an anonymous as shown in the example below.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// a predefined function</span>
<span class="token keyword">function</span> <span class="token function">handleButtonClick</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;The button was clicked!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// using a predefined function</span>
button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> handleButtonClick<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When using a predefined function inside a method, no parentheses are included with the function name. This is because we do not want to invoke the function at this time, but is instead just pass it as an argument, for the <code>addEventListener()</code> method will invoke the passed function for us.</p><p>While the <code>&#39;click&#39;</code> event type is arguably the most common DOM event, there are many, many other event types. All of which, can be used with the <code>addEventListener()</code> method. For example, it is possible to listen for a double click on the page header.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> header <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;header&#39;</span><span class="token punctuation">)</span>

header<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;dblclick&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;The header was double clicked!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),h={class:"try"},m={href:"https://codepen.io/IMD/pen/ZEzMvov",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"On the next page, we will learn more about the different event types.",-1),f={class:"footer"},g=n("h4",null,"Additional Resources",-1),_={href:"https://www.youtube.com/watch?v=EaRrmOtPYTM",target:"_blank",rel:"noopener noreferrer"};function w(y,E){const o=t("Scrimba"),a=t("ExternalLinkIcon");return i(),p("div",null,[r,e(o,{id:"/c/cgq8zZsG",citation:'This screencast was created by <a href="https://scrimba.com/@v-school" target="_blank">V School</a>.'}),n("p",null,[s("Event Listeners are JavaScript objects that listens for a specific DOM Event to occur and executes a function when it does. Event Listeners can be created by using the "),n("a",d,[v,e(a)]),s(" method to a target element.")]),k,n("div",h,[n("p",null,[n("a",m,[s("Try it yourself on CodePen"),e(a)])])]),b,n("footer",f,[g,n("ul",null,[n("li",null,[n("a",_,[s("Introduction to JavaScript Event Listeners"),e(a)])])])])])}const L=c(u,[["render",w],["__file","event-listeners.html.vue"]]);export{L as default};
