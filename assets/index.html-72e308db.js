import{_ as r,M as t,p as c,q as l,N as a,R as n,t as s,a1 as o}from"./framework-96b046e1.js";const i={},d=n("h1",{id:"javascript-object-methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-object-methods","aria-hidden":"true"},"#"),s(" JavaScript Object Methods")],-1),u={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"However, unlike arrays, object literals, the object created with using a set of curly braces, are not iterable and do not have properties like length. Fortunately, JavaScript does include methods that allow for the properties and values of an object literal to be returned as an iterable object.",-1),m=n("h2",{id:"object-keys",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#object-keys","aria-hidden":"true"},"#"),s(" Object.keys")],-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"Object.keys()",-1),b=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Smith&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;jsmith@email.com&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span> <span class="token comment">// [&#39;firstName&#39;, &#39;lastName&#39;, &#39;email&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={class:"challenge"},j={href:"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-data-structures/generate-an-array-of-all-object-keys-with-object.keys",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"object-values",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#object-values","aria-hidden":"true"},"#"),s(" Object.values")],-1),_={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"Object.values()",-1),O=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Smith&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;jsmith@email.com&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span> <span class="token comment">// [&#39;John&#39;, &#39;Smith&#39;, &#39;jsmith@email.com&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="object-entries" tabindex="-1"><a class="header-anchor" href="#object-entries" aria-hidden="true">#</a> Object.entries</h2><p>The <a href=""><code>Object.entries()</code></a> method returns an array of arrays, with each array containing a key / value pair of the specified object.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Smith&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;jsmith@email.com&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> entries <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span> <span class="token comment">// [[&#39;firstName&#39;, &#39;John&#39;], [&#39;lastName&#39;, &#39;Smith&#39;], [&#39;email&#39;, &#39;jsmith@email.com&#39;]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function x(N,S){const p=t("Youtube"),e=t("ExternalLinkIcon");return c(),l("div",null,[d,a(p,{id:"VmicKaGcs5g",citation:"griffith"}),n("p",null,[s("Objects play such an important part of the JavaScript. Not only is nearly every component of JavaScript an extension of the "),n("a",u,[s("Object"),a(e)]),s(" class, but objects can also be an excellent way of storing an retrieving data.")]),k,m,n("p",null,[s("The "),n("a",v,[h,a(e)]),s(" method returns an array of the property names of the specified object.")]),b,n("div",f,[n("p",null,[n("a",j,[s("Take the Object.keys() challenge on freeCodeCamp"),a(e)])])]),y,n("p",null,[s("The "),n("a",_,[g,a(e)]),s(" method returns an array of the values of the specified object.")]),O])}const J=r(i,[["render",x],["__file","index.html.vue"]]);export{J as default};
