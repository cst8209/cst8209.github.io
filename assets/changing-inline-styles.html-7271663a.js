import{_ as n,p as e,q as s,a1 as t}from"./framework-96b046e1.js";const a={},i=t(`<h1 id="changing-inline-styles" tabindex="-1"><a class="header-anchor" href="#changing-inline-styles" aria-hidden="true">#</a> Changing Inline Styles</h1><p>Most of the CSS changes we&#39;ll do with JavaScript involve adding or removing classes. However, there may be situations where we want to directly alter an element&#39;s inline styles.</p><p>Since inline styles are just another HTML attribute (along with <code>id</code>, <code>class</code>, etc.) we can use <code>setAttribute()</code> and change the <code>style</code> attribute.</p><p>Assuming the presence of <code>&lt;p id=&#39;text&#39;&gt;Some stuff&lt;/p&gt;</code> in an HTML document, the following code demonstrates one way of working with inline styles using JavaScript.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> $text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span>

$text<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
background-color: #ddd;
color: darkgrey;
font-size: 40px;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$text<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A multiline string literal has been used here for readability and is completely optional.</p><p>Another favourite method among web developers is to use dot notation and access a special <code>style</code> property automatically created for each JavaScript HTML element object. To avoid confusing these special properties with other JavaScript object properties, we&#39;ll use the <code>setAttribute()</code> approach when manipulating inline styles in this course.</p>`,7),o=[i];function c(l,p){return e(),s("div",null,o)}const d=n(a,[["render",c],["__file","changing-inline-styles.html.vue"]]);export{d as default};
